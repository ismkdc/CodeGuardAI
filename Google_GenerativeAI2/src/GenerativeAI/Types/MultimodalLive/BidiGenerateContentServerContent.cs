using System.Text.Json.Serialization;

namespace GenerativeAI.Types;

/// <summary>
/// Incremental server update generated by the model in response to client messages.
/// Content is generated as quickly as possible, and not in real time. Clients may choose to buffer and play it out in real time.
/// </summary>
/// <seealso href="https://ai.google.dev/gemini-api/docs/multimodal-live#bidigeneratecontentservercontent">See Official API Documentation</seealso>
public class BidiGenerateContentServerContent
{
    /// <summary>
    /// Output only. If true, indicates that the model is done generating. Generation will only start in response to additional client messages. Can be set alongside <see cref="ModelTurn"/>, indicating that the <see cref="ModelTurn"/> is the last in the turn.
    /// </summary>
    [JsonPropertyName("turnComplete")]
    public bool? TurnComplete { get; set; }

    /// <summary>
    /// Output only. If true, indicates that a client message has interrupted current model generation. If the client is playing out the content in real time, this is a good signal to stop and empty the current playback queue.
    /// </summary>
    [JsonPropertyName("interrupted")]
    public bool? Interrupted { get; set; }

    /// <summary>
    /// Output only. Grounding metadata for the generated content.
    /// </summary>
    [JsonPropertyName("groundingMetadata")]
    public GroundingMetadata? GroundingMetadata { get; set; }

    /// <summary>
    /// Output only. The content that the model has generated as part of the current conversation with the user.
    /// </summary>
    [JsonPropertyName("modelTurn")]
    public Content? ModelTurn { get; set; }
}